// üì¶ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
const TelegramBot = require('node-telegram-bot-api');
const request = require('request').defaults({ jar: true });
const { v4: uuidv4 } = require('uuid');
const fs = require('fs');
const path = require('path');

// üîë ‡πÉ‡∏™‡πà‡πÇ‡∏ó‡πÄ‡∏Ñ‡∏ô‡∏ö‡∏≠‡∏ó Telegram ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
const token = '7958883201:AAFvcPy2OTdqMuNeSRXduImHIMIaZpU5sEg'; // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏ó‡πÄ‡∏Ñ‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

// ü§ñ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏≠‡∏ó‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ 'polling' ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
const bot = new TelegramBot(token, { polling: true });

// üóÇÔ∏è ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤
const userSessions = {};

// üóÇÔ∏è ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡πÅ‡∏õ‡∏°
const newUserActivity = {};

// üì≤ ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô TrueMoney
const mobileNumber = '0825658423'; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

// ü§ñ ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
let botUsername = '';
bot.getMe().then((botInfo) => {
  botUsername = botInfo.username;
  console.log(`‚úÖ Bot username: @${botUsername}`);
});

// üîë ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏£‡∏ô‡∏î‡∏≠‡∏° UUID
function generateUUID() {
  return uuidv4();
}

// ‚è≥ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤ expiryTime
function generateExpiryTime(timeAmount, timeUnit) {
  const now = new Date();
  let expiryDate = new Date(now);
  if (timeUnit === 'day') {
    expiryDate.setDate(now.getDate() + timeAmount);
  } else if (timeUnit === 'hour') {
    expiryDate.setHours(now.getHours() + timeAmount);
  } else if (timeUnit === 'minute') {
    expiryDate.setMinutes(now.getMinutes() + timeAmount);
  }
  return expiryDate.getTime();
}

// üîê ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
function login(callback) {
  const loginOptions = {
    method: 'POST',
    url: 'https://tha1.thatoeyvpn.online:1111/vpn/login',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    form: {
      'username': 'zazacvcv02',
      'password': 'zazacvcv02'
    }
  };

  request(loginOptions, function (error, response) {
    if (error) {
      console.error('üö´ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö:', error);
      callback(error);
      return;
    }
    try {
      const body = JSON.parse(response.body);
      if (body.success) {
        console.log('‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', body.msg);
        callback(null);
      } else {
        console.log('üö´ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', body.msg);
        callback(new Error(body.msg));
      }
    } catch (e) {
      console.error('üö´ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÑ‡∏î‡πâ:', e);
      console.log('üì• Response Body:', response.body);
      callback(e);
    }
  });
}

// üë• ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
function addNewClient(session, successCallback, errorCallback) {
  const clientUUID = generateUUID();
  const expiryTime = session.expiryTime || generateExpiryTime(session.timeAmount, session.timeUnit);
  const totalGB = session.gbLimit > 0 ? session.gbLimit * 1024 * 1024 * 1024 : 0;
  const ipLimit = session.ipLimit > 0 ? session.ipLimit : 0;

  const apiUrl = 'https://tha1.thatoeyvpn.online:1111/vpn/panel/api/inbounds/addClient';
  const apiSettings = {
    clients: [{
      id: clientUUID,
      alterId: 0,
      email: session.codeName,
      limitIp: ipLimit || 2,
      totalGB: totalGB > 0 ? totalGB : 0,
      expiryTime: expiryTime,
      enable: true,
      tgId: '',
      subId: ''
    }]
  };

  const options = {
    method: 'POST',
    url: apiUrl,
    headers: {
      'Accept': 'application/json',
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      id: session.apiId,
      settings: JSON.stringify(apiSettings)
    })
  };

  request(options, function (error, response) {
    if (error) {
      console.error('üö´ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠:', error);
      errorCallback('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠');
      return;
    }
    try {
      const body = JSON.parse(response.body);
      if (body.success) {
        console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', body.msg);
        let clientCode = '';
        if (session.type === 'true_pro_facebook') {
          clientCode = `vless://${clientUUID}@tha1.thatoeyvpn.online:8000?type=tcp&security=tls&fp=chrome&alpn=h3%2Ch2%2Chttp%2F1.1&allowInsecure=1&sni=connect.facebook.net#${encodeURIComponent(session.codeName)}`;
        } else if (session.type === 'ais') {
          clientCode = `vless://${clientUUID}@tha1.thatoeyvpn.online:8080?type=ws&path=%2Fvpnws&host=speedtest.net&security=none#${encodeURIComponent(session.codeName)}`;
        } else if (session.type === 'true_zoom') {
          clientCode = `vless://${clientUUID}@support.zoom.us:8443?type=ws&path=%2F&host=tha1.thatoeyvpn.online&security=tls&fp=chrome&alpn=h3%2Ch2%2Chttp%2F1.1&sni=tha1.thatoeyvpn.online#${encodeURIComponent(session.codeName)}`;
        }
        successCallback(clientCode, expiryTime);
      } else {
        console.log('üö´ ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', body.msg);
        if (body.msg.includes('Duplicate email')) {
          errorCallback('‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß');
        } else {
          errorCallback(body.msg);
        }
      }
    } catch (e) {
      console.error('üö´ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÑ‡∏î‡πâ:', e);
      console.log('üì• Response Body:', response.body);
      errorCallback('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÑ‡∏î‡πâ');
    }
  });
}

// üí∏ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤ TrueMoney
function verifyPaymentLinkangpao(chatId, parameters, paymentData, amount) {
  console.log(`amount: ${amount}`);
  console.log(`parameters: ${JSON.stringify(parameters)}`);
  console.log(`paymentData: ${paymentData}`);

  if (!paymentData || typeof paymentData !== 'string') {
    bot.sendMessage(chatId, 'üö´ *‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á*', { parse_mode: 'Markdown' });
    return;
  }

  // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç pattern ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏ö‡∏ö‡∏°‡∏µ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ / ‡∏´‡∏•‡∏±‡∏á campaign
  const linkPattern = /https:\/\/gift\.truemoney\.com\/campaign\/?(\?v=)([0-9A-Za-z]{35})/;
  const match = paymentData.match(linkPattern);
  if (!match) {
    bot.sendMessage(chatId, 'üö´ *‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á*', { parse_mode: 'Markdown' });
    return;
  }

  // ‡πÉ‡∏ä‡πâ match[2] ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 2 ‡∏Ñ‡∏∑‡∏≠ voucher hash (‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏£‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 1 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ?v=)
  const voucherHash = match[2];
  console.log(`voucherHash: ${voucherHash}`);

  const postData = JSON.stringify({
    mobile: parameters.phone,
    voucher_hash: voucherHash
  });

  const url = `https://gift.truemoney.com/campaign/vouchers/${voucherHash}/redeem`;

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á User-Agent ‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏à‡∏£‡∏¥‡∏á
  const userAgent = `Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.${Math.floor(Math.random() * 9000) + 1000}.0 Safari/537.36`;

  const options = {
    method: 'POST',
    url: url,
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json',
      'User-Agent': userAgent,
      'Origin': 'https://gift.truemoney.com',
      'Referer': 'https://gift.truemoney.com/campaign/',
      'Accept-Language': 'th-TH,th;q=0.9,en-US;q=0.8,en;q=0.7',
      'Accept-Encoding': 'gzip, deflate, br',
      'Connection': 'keep-alive',
      'Content-Length': Buffer.byteLength(postData)
    },
    body: postData,
    gzip: true
  };

  request(options, (error, response, body) => {
    if (error) {
      console.error('[verifyPaymentLinkangpao] cURL error:', error);
      bot.sendMessage(chatId, 'üö´ *‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠*', { parse_mode: 'Markdown' });
      return;
    }

    console.log(`[verifyPaymentLinkangpao] API response status: ${response.statusCode}`);
    console.log(`[verifyPaymentLinkangpao] API response body: ${body}`);

    let data;
    try {
      if (!body || typeof body !== 'string' || (!body.trim().startsWith('{') && !body.trim().startsWith('['))) {
        throw new Error('Response is not valid JSON');
      }
      data = JSON.parse(body);
    } catch (e) {
      console.error('[verifyPaymentLinkangpao] JSON decode error:', e);
      bot.sendMessage(chatId, 'üö´ *‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á*', { parse_mode: 'Markdown' });
      return;
    }

    if (data.status && data.status.code === 'SUCCESS') {
      const voucherAmount = parseFloat(data.data.my_ticket.amount_baht);
      console.log(`[verifyPaymentLinkangpao] Voucher amount: ${voucherAmount}, Expected amount: ${amount}`);
      if (voucherAmount === amount) {
        let creditsToAdd = amount;
        if (amount === 100) {
          creditsToAdd += 20; // ‡πÄ‡∏ï‡∏¥‡∏° 100 ‡∏ö‡∏≤‡∏ó ‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏µ‡∏Å 20 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
        }
        bot.sendMessage(chatId, `üéâ *‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${amount} ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!* ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ${creditsToAdd} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡πÄ‡∏£‡∏≤‡∏Ñ‡∏£‡∏±‡∏ö üôè`, { parse_mode: 'Markdown' });
        updateUserCredits(chatId, creditsToAdd);
      } else {
        bot.sendMessage(chatId, `üö´ *‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏ã‡∏≠‡∏á (${voucherAmount} ‡∏ö‡∏≤‡∏ó) ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏ (${amount} ‡∏ö‡∏≤‡∏ó)*`, { parse_mode: 'Markdown' });
      }
    } else {
      const errorMessage = data.status ? data.status.message : 'Unknown error';
      console.error(`[verifyPaymentLinkangpao] API error: ${errorMessage}`);
      bot.sendMessage(chatId, `üö´ *‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ: ${errorMessage}*`, { parse_mode: 'Markdown' });
    }
  });
}

// üí∞ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
let usersData = {};
const dataFilePath = path.join(__dirname, 'transactions.json');

if (fs.existsSync(dataFilePath)) {
  try {
    const data = fs.readFileSync(dataFilePath, 'utf8');
    usersData = JSON.parse(data);
    for (let userId in usersData) {
      usersData[userId].codes.forEach(codeEntry => {
        if (!codeEntry.expiryTime) {
          const creationDate = new Date(codeEntry.creationDate);
          const expiryDate = new Date(creationDate);
          expiryDate.setDate(creationDate.getDate() + 30);
          codeEntry.expiryTime = expiryDate.getTime();
        }
      });
      fs.writeFileSync(dataFilePath, JSON.stringify(usersData, null, 2));
    }
  } catch (err) {
    console.error('üö´ Error reading transactions.json:', err);
    usersData = {};
  }
} else {
  usersData = {};
  fs.writeFileSync(dataFilePath, JSON.stringify(usersData, null, 2));
}

function getUserData(userId) {
  return usersData[userId] || { credits: 0, codes: [], trialCodesCount: 0, lastTrialResetMonth: new Date().getMonth() };
}

function saveUserData(userId, data) {
  usersData[userId] = data;
  fs.writeFile(dataFilePath, JSON.stringify(usersData, null, 2), (err) => {
    if (err) {
      console.error(`üö´ Error writing ${dataFilePath}:`, err);
    }
  });
}

function updateUserCredits(chatId, amount) {
  const userId = chatId.toString();
  let userData = getUserData(userId);
  let currentCredits = userData.credits || 0;
  const newCredits = currentCredits + amount;
  userData.credits = newCredits;
  saveUserData(userId, userData);
  bot.sendMessage(chatId, `üíé ‡∏¢‡∏≠‡∏î‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ ${newCredits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï`, { parse_mode: 'Markdown' });
}

// üëë ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
const adminIds = [7388463166];

// ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ mute ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
const mutedUsers = {};

// üèÅ ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const message = `‚ú® *‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡∏î‡πÑ‡∏Æ‡πÄ‡∏ó‡∏Ñ!* ‚ú®\n\n` +
                  `üìú *‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:*\n\n` +
                  `üöÄ /addclient - *‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡∏°‡πà*\n` +
                  `üí≥ /topup - *‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï*\n` +
                  `üí∞ /mycredits - *‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì*\n` +
                  `üìÑ /mycodes - *‡∏î‡∏π‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ*\n` +
                  `üÜì /trialcode - *‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ü‡∏£‡∏µ*\n` +
                  `ü§ù /transfercredits - *‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏∑‡πà‡∏ô*\n\n` +
                  `‚ö°Ô∏è *Tip:* ‡∏û‡∏¥‡∏°‡∏û‡πå /help ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°!`;
  bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });
});

// üí≥ ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /topup
bot.onText(/\/topup/, (msg) => {
  const chatId = msg.chat.id;
  if (msg.chat.type === 'private') {
    const message = 
`üí†üí†üí†üí†üí†üí†üí†üí†üí†
*‚ö°Ô∏è Hi-Tech Top-Up System ‚ö°Ô∏è*
üí†üí†üí†üí†üí†üí†üí†üí†üí†

‚ú® *‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï:*
1. üîó ‡∏™‡πà‡∏á *‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤‡∏ß‡∏≠‡πÄ‡∏•‡πá‡∏ó* ‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó
2. ‚è≥ ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ‡∏£‡∏∞‡∏ö‡∏ö AI ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß
3. üíé ‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!

üéÅ *‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©!*
üí∞ ‡πÄ‡∏ï‡∏¥‡∏° 100 ‡∏ö‡∏≤‡∏ó ‡∏£‡∏±‡∏ö‡∏ü‡∏£‡∏µ‡∏≠‡∏µ‡∏Å 20 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï!

*Tip:* ‡∏¢‡∏¥‡πà‡∏á‡πÄ‡∏ï‡∏¥‡∏°‡∏°‡∏≤‡∏Å ‡∏¢‡∏¥‡πà‡∏á‡∏Ñ‡∏∏‡πâ‡∏°‡∏°‡∏≤‡∏Å! üöÄ
`;
    bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });
  } else {
    const options = {
      parse_mode: 'Markdown',
      disable_web_page_preview: false,
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üí≥ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏±‡∏ö‡∏ö‡∏≠‡∏ó', url: `https://t.me/${botUsername}?start=topup` }]
        ]
      }
    };
    const message = `‚ö†Ô∏è *‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏±‡∏ö‡∏ö‡∏≠‡∏ó!* ‚ö†Ô∏è\n\n` +
                    `üéÅ *‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏™‡∏∏‡∏î‡∏û‡∏¥‡πÄ‡∏®‡∏©!* ‡πÄ‡∏ï‡∏¥‡∏° 100 ‡∏ö‡∏≤‡∏ó ‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏µ‡∏Å 20 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n\n` +
                    `üì≤ ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô`;
    bot.sendMessage(chatId, message, options);
  }
});

// üí∞ ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /mycredits
bot.onText(/\/mycredits/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id.toString();
  let userData = getUserData(userId);
  let credits = userData.credits || 0;
  bot.sendMessage(chatId, `üíé *‡∏¢‡∏≠‡∏î‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠:* ${credits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï`, { parse_mode: 'Markdown' });
});

// üìÑ ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /mycodes
bot.onText(/\/mycodes/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id.toString();
  let userData = getUserData(userId);
  if (userData.codes && userData.codes.length > 0) {
    let response = `üìú *‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:*\n\n`;
    const nowTime = Date.now();
    userData.codes.forEach((codeEntry, index) => {
      if (codeEntry.expiryTime) {
        const timeLeft = codeEntry.expiryTime - nowTime;
        if (timeLeft > 0) {
          let timeString = '';
          const days = Math.floor(timeLeft / (24 * 60 * 60 * 1000));
          const hours = Math.floor((timeLeft % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000));
          const minutes = Math.floor((timeLeft % (60 * 60 * 1000)) / (60 * 1000));
          if (days > 0) timeString += `${days} ‡∏ß‡∏±‡∏ô `;
          if (hours > 0) timeString += `${hours} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á `;
          if (minutes > 0) timeString += `${minutes} ‡∏ô‡∏≤‡∏ó‡∏µ `;
          response += `üîπ *${index + 1}. ${codeEntry.codeName}:* ‡∏¢‡∏±‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏ß‡∏•‡∏≤ ${timeString.trim()}\n`;
        } else {
          response += `üîπ *${index + 1}. ${codeEntry.codeName}:* ‚ùå ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏\n`;
        }
      } else {
        response += `üîπ *${index + 1}. ${codeEntry.codeName}:* ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÄ‡∏ß‡∏•‡∏≤\n`;
      }
    });
    bot.sendMessage(chatId, response, { parse_mode: 'Markdown' });
  } else {
    bot.sendMessage(chatId, '‚ùå *‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏î‡πÜ*', { parse_mode: 'Markdown' });
  }
});

// üÜì ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /trialcode
bot.onText(/\/trialcode/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const userIdStr = userId.toString();
  let userData = getUserData(userIdStr);
  const currentMonth = new Date().getMonth();

  if (!userData.lastTrialResetMonth || userData.lastTrialResetMonth !== currentMonth) {
    userData.trialCodesCount = 0;
    userData.lastTrialResetMonth = currentMonth;
    saveUserData(userIdStr, userData);
  }

  if (userData.trialCodesCount >= 3) {
    bot.sendMessage(chatId, 'üö´ *‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏Ñ‡∏£‡∏ö 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß*', { parse_mode: 'Markdown' });
  } else {
    if (msg.chat.type === 'supergroup' && chatId === -1002415342873) {
      const options = {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üöÄ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡∏° VPS (IDC)', callback_data: 'vps_IDC_trial' }]
          ]
        }
      };
      bot.sendMessage(chatId, 'üîß *‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó VPS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏î‡∏•‡∏≠‡∏á:*', options).then(sentMessage => {
        if (!userSessions[userId]) {
          userSessions[userId] = {};
        }
        userSessions[userId].chatId = chatId;
        userSessions[userId].originalMessageId = sentMessage.message_id;
        userSessions[userId].isTrial = true;
      });
    } else {
      bot.sendMessage(chatId, '‚ö†Ô∏è *‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!*', { parse_mode: 'Markdown' });
    }
  }
});

// ü§ù ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /transfercredits
bot.onText(/\/transfercredits/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  if (!userSessions[userId]) {
    userSessions[userId] = {};
  }
  userSessions[userId].step = 'transfer_ask_user';
  const message = `ü§ù *‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏™‡∏∏‡∏î‡πÑ‡∏Æ‡πÄ‡∏ó‡∏Ñ!*\n\n1. ‡πÇ‡∏õ‡∏£‡∏î *‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö (Reply)* ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ\n2. ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏ö‡∏≠‡∏ó‡∏à‡∏∞‡∏ñ‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô\n\nüíé ‡∏™‡∏∞‡∏î‡∏ß‡∏Å ‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß ‡πÅ‡∏•‡∏∞‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢!`;
  bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });
});

// üëë ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /givecredits ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
bot.onText(/\/givecredits/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  if (adminIds.includes(userId)) {
    const options = {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üë• ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢)', callback_data: 'givecredits_to_user' }],
          [{ text: 'üôã‚Äç‚ôÇÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á', callback_data: 'givecredits_to_self' }]
        ]
      }
    };
    bot.sendMessage(chatId, 'üîß *‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:*', options);
  } else {
    bot.sendMessage(chatId, 'üö´ *‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!*', { parse_mode: 'Markdown' });
  }
});

// üëë ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /allcodes ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
bot.onText(/\/allcodes/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  if (adminIds.includes(userId)) {
    let response = 'üìÑ *‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:*\n\n';
    for (let uid in usersData) {
      if (usersData[uid].codes && usersData[uid].codes.length > 0) {
        response += `üë§ *User ID: ${uid}*\n`;
        const nowTime = Date.now();
        usersData[uid].codes.forEach((codeEntry) => {
          if (codeEntry.expiryTime) {
            const timeLeft = codeEntry.expiryTime - nowTime;
            if (timeLeft > 0) {
              let timeString = '';
              const days = Math.floor(timeLeft / (24 * 60 * 60 * 1000));
              const hours = Math.floor((timeLeft % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000));
              const minutes = Math.floor((timeLeft % (60 * 60 * 1000)) / (60 * 1000));
              if (days > 0) timeString += `${days} ‡∏ß‡∏±‡∏ô `;
              if (hours > 0) timeString += `${hours} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á `;
              if (minutes > 0) timeString += `${minutes} ‡∏ô‡∏≤‡∏ó‡∏µ `;
              response += `   üîπ ${codeEntry.codeName}: ${codeEntry.code} - ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏ß‡∏•‡∏≤ ${timeString.trim()}\n`;
            } else {
              response += `   üîπ ${codeEntry.codeName}: ${codeEntry.code} - ‚ùå ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏\n`;
            }
          } else {
            response += `   üîπ ${codeEntry.codeName}: ${codeEntry.code} - ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÄ‡∏ß‡∏•‡∏≤\n`;
          }
        });
        response += '\n';
      }
    }
    bot.sendMessage(chatId, response, { parse_mode: 'Markdown' });
  } else {
    bot.sendMessage(chatId, 'üö´ *‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!*', { parse_mode: 'Markdown' });
  }
});

// üöÄ ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /addclient
bot.onText(/\/addclient/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  if (chatId === -1002415342873) {
    const options = {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üöÄ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡∏° VPS (IDC)', callback_data: 'vps_IDC' }]
        ]
      }
    };
    bot.sendMessage(chatId, 'üîß *‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó VPS:*', options).then(sentMessage => {
      if (!userSessions[userId]) {
        userSessions[userId] = {};
      }
      userSessions[userId].chatId = chatId;
      userSessions[userId].originalMessageId = sentMessage.message_id;
    });
  } else {
    bot.sendMessage(chatId, '‚ö†Ô∏è *‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!*', { parse_mode: 'Markdown' });
  }
});

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ callback_query
bot.on('callback_query', (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const userId = callbackQuery.from.id;
  const data = callbackQuery.data;
  const messageId = callbackQuery.message.message_id;

  if (!userSessions[userId]) {
    userSessions[userId] = {};
  }
  const session = userSessions[userId];

  if (data === 'vps_IDC') {
    session.vpsType = 'IDC';
    const profileOptions = {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üåê TRUE‡πÄ‡∏ü‡∏™‡∏ö‡∏∏‡πä‡∏Ñ‡πÄ‡∏Å‡∏°‡∏°‡∏¥‡πà‡∏á&Esport', callback_data: 'profile_true_pro_facebook' }],
          [{ text: 'üì∂ AIS', callback_data: 'profile_ais' }],
          [{ text: 'üîß TRUE Zoom&VDO', callback_data: 'profile_true_zoom' }]
        ]
      }
    };
    bot.editMessageText('üîç *‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå:*', {
      chat_id: chatId,
      message_id: messageId,
      parse_mode: 'Markdown'
    }).then(() => {
      bot.sendMessage(chatId, 'üîç *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:*', profileOptions).then(sentMessage => {
        session.originalMessageId = sentMessage.message_id;
      });
    }).catch((error) => {
      console.error('üö´ Error editing message:', error);
    });
  } else if (data === 'vps_IDC_trial') {
    session.vpsType = 'IDC';
    session.isTrial = true;
    const profileOptions = {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üåê TRUE‡πÄ‡∏ü‡∏™‡∏ö‡∏∏‡πä‡∏Ñ‡πÄ‡∏Å‡∏°‡∏°‡∏¥‡πà‡∏á&Esport', callback_data: 'profile_true_pro_facebook_trial' }],
          [{ text: 'üì∂ AIS', callback_data: 'profile_ais_trial' }],
          [{ text: 'üîß TRUE Zoom&VDO', callback_data: 'profile_true_zoom_trial' }]
        ]
      }
    };
    bot.editMessageText('üîç *‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå:*', {
      chat_id: chatId,
      message_id: messageId,
      parse_mode: 'Markdown'
    }).then(() => {
      bot.sendMessage(chatId, 'üîç *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:*', profileOptions).then(sentMessage => {
        session.originalMessageId = sentMessage.message_id;
      });
    }).catch((error) => {
      console.error('üö´ Error editing message:', error);
    });
  } else if (data.startsWith('profile_')) {
    let apiId;
    let profileType;
    const isTrial = data.endsWith('_trial');
    const dataNormal = data.replace('_trial', '');

    if (dataNormal === 'profile_true_pro_facebook') {
      apiId = 3;
      profileType = 'true_pro_facebook';
    } else if (dataNormal === 'profile_ais') {
      apiId = 1;
      profileType = 'ais';
    } else if (dataNormal === 'profile_true_zoom') {
      apiId = 2;
      profileType = 'true_zoom';
    }

    session.step = 'ask_code_name';
    session.type = profileType;
    session.apiId = apiId;
    if (isTrial) {
      session.isTrial = true;
    }

    bot.editMessageText('üìù *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:*', {
      chat_id: chatId,
      message_id: messageId,
      parse_mode: 'Markdown'
    }).catch((error) => {
      console.error('üö´ Error editing message:', error);
    });
  } else if (data === 'givecredits_to_user') {
    if (adminIds.includes(userId)) {
      userSessions[userId] = { step: 'givecredits_ask_user' };
      bot.sendMessage(chatId, 'üîç *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ*', { parse_mode: 'Markdown' });
    } else {
      bot.answerCallbackQuery(callbackQuery.id, 'üö´ *‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!*', { show_alert: true, parse_mode: 'Markdown' });
    }
  } else if (data === 'givecredits_to_self') {
    if (adminIds.includes(userId)) {
      userSessions[userId] = { step: 'givecredits_ask_amount', targetUserId: userId };
      bot.sendMessage(chatId, 'üí∞ *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á*', { parse_mode: 'Markdown' });
    } else {
      bot.answerCallbackQuery(callbackQuery.id, 'üö´ *‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!*', { show_alert: true, parse_mode: 'Markdown' });
    }
  } else if (data === 'time_unit_day' || data === 'time_unit_hour' || data === 'time_unit_minute') {
    if (data === 'time_unit_day') {
      session.timeUnit = 'day';
    } else if (data === 'time_unit_hour') {
      session.timeUnit = 'hour';
    } else if (data === 'time_unit_minute') {
      session.timeUnit = 'minute';
    }
    session.step = 'ask_time_amount';
    bot.editMessageText(`‚è∞ *‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏ß‡∏•‡∏≤:* ${session.timeUnit === 'day' ? '‡∏ß‡∏±‡∏ô' : session.timeUnit === 'hour' ? '‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á' : '‡∏ô‡∏≤‡∏ó‡∏µ'}`, {
      chat_id: chatId,
      message_id: messageId,
      parse_mode: 'Markdown'
    }).catch((error) => {
      console.error('üö´ Error editing message:', error);
    });
    bot.sendMessage(chatId, `üìÖ *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô${session.timeUnit === 'day' ? '‡∏ß‡∏±‡∏ô' : session.timeUnit === 'hour' ? '‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á' : '‡∏ô‡∏≤‡∏ó‡∏µ'}‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:*`, { parse_mode: 'Markdown' }).then(sentMessage => {
      session.timeAmountMessageId = sentMessage.message_id;
    });
  } else if (data === 'refresh_topup_info') {
    const message = 
`üí†üí†üí†üí†üí†üí†üí†üí†üí†
*‚ö°Ô∏è Hi-Tech Top-Up System ‚ö°Ô∏è*
üí†üí†üí†üí†üí†üí†üí†üí†üí†

‚ú® *‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï:*
1. üîó ‡∏™‡πà‡∏á *‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤‡∏ß‡∏≠‡πÄ‡∏•‡πá‡∏ó* ‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó
2. ‚è≥ ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ‡∏£‡∏∞‡∏ö‡∏ö AI ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß
3. üíé ‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!

üéÅ *‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©!*
üí∞ ‡πÄ‡∏ï‡∏¥‡∏° 100 ‡∏ö‡∏≤‡∏ó ‡∏£‡∏±‡∏ö‡∏ü‡∏£‡∏µ‡∏≠‡∏µ‡∏Å 20 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï!

*Tip:* ‡∏¢‡∏¥‡πà‡∏á‡πÄ‡∏ï‡∏¥‡∏°‡∏°‡∏≤‡∏Å ‡∏¢‡∏¥‡πà‡∏á‡∏Ñ‡∏∏‡πâ‡∏°‡∏°‡∏≤‡∏Å! üöÄ
`;
    bot.editMessageText(message, {
      chat_id: chatId,
      message_id: messageId,
      parse_mode: 'Markdown',
      disable_web_page_preview: false
    }).catch((error) => {
      console.error('üö´ Error refreshing topup info:', error);
    });
  }
});

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const text = msg.text;
  const groupChatId = -1002415342873; // ID ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö

  // ‡πÄ‡∏ä‡πá‡∏Ñ pendingCode ‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß ‡∏Å‡πà‡∏≠‡∏ô logic ‡∏≠‡∏∑‡πà‡∏ô
  if (msg.chat.type === 'private') {
    if (userSessions[userId] && userSessions[userId].pendingCode) {
      const { clientCode, session, msg: oldMsg, expiryTime } = userSessions[userId].pendingCode;
      sendCodeToUser(userId, userId, clientCode, session, oldMsg || msg, expiryTime);
      delete userSessions[userId].pendingCode;
      return;
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
    if (text && typeof text === 'string') {
      // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç pattern ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏ö‡∏ö‡∏°‡∏µ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ / ‡∏´‡∏•‡∏±‡∏á campaign
      const linkPattern = /https:\/\/gift\.truemoney\.com\/campaign\/?(\?v=)([0-9A-Za-z]{35})/;
      if (linkPattern.test(text)) {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤
        bot.sendMessage(chatId, 'üîç *‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤...*', { parse_mode: 'Markdown' });
        
        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå (‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô 100 ‡∏ö‡∏≤‡∏ó)
        // ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ñ‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        const amount = 100;
        
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤
        verifyPaymentLinkangpao(chatId, { phone: mobileNumber }, text, amount);
        return;
      }
    }
  }

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°
  if (msg.new_chat_members && msg.chat.id === groupChatId) {
    console.log(`üì• New members detected in group ${groupChatId}:`, msg.new_chat_members);
    try {
      if (!Array.isArray(msg.new_chat_members)) {
        console.error('üö´ msg.new_chat_members is not an array:', msg.new_chat_members);
        return;
      }

      msg.new_chat_members.forEach((newMember) => {
        if (newMember.id !== bot.id && !adminIds.includes(newMember.id)) {
          console.log(`üë§ New member: ${newMember.id} (${newMember.first_name}) joined the group`);
          const welcomeMessage = `üéâ *‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì ${newMember.first_name || '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà'} ‡∏™‡∏π‡πà‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏∏‡∏î‡πÑ‡∏Æ‡πÄ‡∏ó‡∏Ñ!* üéä\n\n` +
                                `üîß ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô:\n` +
                                `üöÄ /addclient - *‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡∏°‡πà*\n` +
                                `üí≥ /topup - *‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï*\n` +
                                `üí∞ /mycredits - *‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì*\n` +
                                `üìÑ /mycodes - *‡∏î‡∏π‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ*\n` +
                                `üÜì /trialcode - *‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ü‡∏£‡∏µ*\n` +
                                `ü§ù /transfercredits - *‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏∑‡πà‡∏ô*\n\n` +
                                `‚ö†Ô∏è *‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 10 ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏°‡∏¥‡∏â‡∏∞‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°!*`;
          
          // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ API ‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£
          setTimeout(() => {
            bot.sendMessage(chatId, welcomeMessage, { parse_mode: 'Markdown' })
              .then(sentMessage => {
                console.log(`‚úÖ Welcome message sent to ${newMember.id} (${newMember.first_name})`);
                // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà
                newUserActivity[newMember.id] = {
                  joinTime: Date.now(),
                  lastActivity: Date.now(),
                  messageCount: 0,
                  messages: [],
                  isActive: false,
                  warningSent: false,
                  isBanned: false // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ isBanned
                };
                console.log(`üìã Added ${newMember.id} to newUserActivity`);
              })
              .catch(err => {
                console.error(`üö´ Error sending welcome message to ${newMember.id}:`, err);
              });
          }, 1000); // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

          // ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô: ‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏¥‡∏ç (msg.from)
          if (msg.from && msg.from.id !== newMember.id && !adminIds.includes(msg.from.id) && !msg.from.is_bot) {
            const inviterId = msg.from.id.toString();
            let inviterData = getUserData(inviterId);
            inviterData.credits = (inviterData.credits || 0) + 1;
            saveUserData(inviterId, inviterData);
            console.log(`üéÅ Credited 1 credit to inviter ${inviterId} for inviting ${newMember.id}`);
            bot.sendMessage(msg.from.id, `üéÅ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö 1 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô (${newMember.first_name || '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà'}) ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°!`)
              .catch(err => {
                console.error(`üö´ Error sending invite credit message to ${inviterId}:`, err);
              });
          }
        }
      });
    } catch (err) {
      console.error('üö´ Error handling new_chat_members:', err);
    }
    return;
  }

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
  if (newUserActivity[userId] && msg.chat.id === groupChatId && !adminIds.includes(userId)) {
    newUserActivity[userId].lastActivity = Date.now();
    newUserActivity[userId].messageCount += 1;
    newUserActivity[userId].messages.push({
      text: text || '',
      timestamp: Date.now()
    });
    // ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ active ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏™‡πÅ‡∏õ‡∏°
    if (text && (text.startsWith('/') || text.length > 5)) {
      newUserActivity[userId].isActive = true;
    }
  }

  // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ groupChatId) ‡πÅ‡∏•‡∏∞ mute 2 ‡∏ô‡∏≤‡∏ó‡∏µ
  if (msg.chat.id === groupChatId && text && /https?:\/\//i.test(text)) {
    bot.deleteMessage(chatId, msg.message_id).catch(() => {});
    // mute ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ 2 ‡∏ô‡∏≤‡∏ó‡∏µ
    if (!mutedUsers[userId]) {
      mutedUsers[userId] = true;
      bot.restrictChatMember(chatId, userId, {
        permissions: {
          can_send_messages: false,
          can_send_media_messages: false,
          can_send_polls: false,
          can_send_other_messages: false,
          can_add_web_page_previews: false,
          can_change_info: false,
          can_invite_users: false,
          can_pin_messages: false
        },
        until_date: Math.floor(Date.now() / 1000) + 120 // 2 ‡∏ô‡∏≤‡∏ó‡∏µ
      }).then(() => {
        bot.sendMessage(chatId, `üö´ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ @${msg.from.username || msg.from.first_name} ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå 2 ‡∏ô‡∏≤‡∏ó‡∏µ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå!`).then((banMsg) => {
          // ‡πÄ‡∏Å‡πá‡∏ö message_id ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ô‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á
          mutedUsers[userId] = { active: true, banMsgId: banMsg.message_id };
          setTimeout(() => {
            bot.restrictChatMember(chatId, userId, {
              permissions: {
                can_send_messages: true,
                can_send_media_messages: true,
                can_send_polls: true,
                can_send_other_messages: true,
                can_add_web_page_previews: true,
                can_change_info: false,
                can_invite_users: true,
                can_pin_messages: false
              }
            }).then(() => {
              // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ô‡∏≠‡∏≠‡∏Å
              if (mutedUsers[userId] && mutedUsers[userId].banMsgId) {
                bot.deleteMessage(chatId, mutedUsers[userId].banMsgId).catch(() => {});
              }
              mutedUsers[userId] = false;
              bot.sendMessage(chatId, `‚úÖ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ @${msg.from.username || msg.from.first_name} ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß`);
            }).catch(() => { mutedUsers[userId] = false; });
          }, 120000); // 2 ‡∏ô‡∏≤‡∏ó‡∏µ
        });
      }).catch(() => { mutedUsers[userId] = false; });
    }
    return;
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
  if (userSessions[userId]) {
    const session = userSessions[userId];

    if (session.step === 'ask_code_name') {
      session.codeName = text;
      if (session.isTrial) {
        session.timeUnit = 'minute';
        session.timeAmount = 20;
        session.expiryTime = generateExpiryTime(session.timeAmount, session.timeUnit);
        session.step = 'ask_gb_limit';
        bot.sendMessage(chatId, 'üíæ *‡∏£‡∏∞‡∏ö‡∏∏ GB ‡∏à‡∏≥‡∏Å‡∏±‡∏î (0 = ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î):*', { parse_mode: 'Markdown' }).then(sentMessage => {
          session.gbMessageId = sentMessage.message_id;
        });
      } else {
        session.step = 'ask_time_unit';
        const options = {
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üìÖ ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ß‡∏±‡∏ô', callback_data: 'time_unit_day' }],
              [{ text: '‚è∞ ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á', callback_data: 'time_unit_hour' }],
              [{ text: '‚è±Ô∏è ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ô‡∏≤‡∏ó‡∏µ', callback_data: 'time_unit_minute' }]
            ]
          }
        };
        bot.sendMessage(chatId, '‚è∞ *‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏ß‡∏•‡∏≤:*', options).then(sentMessage => {
          session.timeUnitMessageId = sentMessage.message_id;
        });
      }
    } else if (session.step === 'ask_time_amount') {
      const timeAmount = parseInt(text);
      if (isNaN(timeAmount) || timeAmount <= 0) {
        bot.sendMessage(chatId, '‚ö†Ô∏è *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!*', { parse_mode: 'Markdown' });
      } else if (session.timeUnit === 'day' && (timeAmount < 1 || timeAmount > 30)) {
        bot.sendMessage(chatId, '‚ö†Ô∏è *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1 ‡∏ñ‡∏∂‡∏á 30 ‡∏ß‡∏±‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!*', { parse_mode: 'Markdown' });
      } else {
        session.timeAmount = timeAmount;
        session.expiryTime = generateExpiryTime(session.timeAmount, session.timeUnit);
        session.step = 'ask_gb_limit';
        bot.sendMessage(chatId, 'üíæ *‡∏£‡∏∞‡∏ö‡∏∏ GB ‡∏à‡∏≥‡∏Å‡∏±‡∏î (0 = ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î):*', { parse_mode: 'Markdown' }).then(sentMessage => {
          session.gbMessageId = sentMessage.message_id;
        });
      }
    } else if (session.step === 'ask_gb_limit') {
      const gbLimit = parseInt(text);
      if (isNaN(gbLimit) || gbLimit < 0) {
        bot.sendMessage(chatId, '‚ö†Ô∏è *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ GB ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!*', { parse_mode: 'Markdown' });
      } else {
        session.gbLimit = gbLimit;
        session.step = 'ask_ip_limit';
        bot.sendMessage(chatId, 'üåê *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô IP ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:*', { parse_mode: 'Markdown' }).then(sentMessage => {
          session.ipMessageId = sentMessage.message_id;
        });
      }
    } else if (session.step === 'ask_ip_limit') {
      const ipLimit = parseInt(text);
      if (isNaN(ipLimit) || ipLimit <= 0) {
        bot.sendMessage(chatId, '‚ö†Ô∏è *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô IP ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!*', { parse_mode: 'Markdown' });
      } else {
        session.ipLimit = ipLimit;
        session.step = 'creating_code';
        bot.sendAnimation(chatId, 'https://i.imgur.com/CiAYAcN.gif', {
          caption: 'üîÑ *‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î... ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏ã‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà...*',
          parse_mode: 'Markdown'
        }).then((loadingMessage) => {
          session.loadingMessageId = loadingMessage.message_id;

          setTimeout(() => {
            const userIdStr = userId.toString();
            let userData = getUserData(userIdStr);

            if (session.isTrial) {
              if (userData.trialCodesCount >= 3) {
                bot.sendMessage(chatId, 'üö´ *‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ!*', { parse_mode: 'Markdown' });
                if (session.loadingMessageId) {
                  bot.deleteMessage(chatId, session.loadingMessageId).catch(console.error);
                }
                delete userSessions[userId];
                return;
              } else {
                login((loginError) => {
                  if (loginError) {
                    bot.sendMessage(chatId, 'üö´ *‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö!*', { parse_mode: 'Markdown' });
                    if (session.loadingMessageId) {
                      bot.deleteMessage(chatId, session.loadingMessageId).catch(console.error);
                    }
                    delete userSessions[userId];
                    return;
                  }

                  addNewClient(session, (clientCode, expiryTime) => {
                    sendCodeToUser(userId, chatId, clientCode, session, msg, expiryTime);
                    userData.trialCodesCount = (userData.trialCodesCount || 0) + 1;
                    saveUserData(userIdStr, userData);
                    if (session.loadingMessageId) {
                      bot.deleteMessage(chatId, session.loadingMessageId).catch(console.error);
                    }
                    bot.sendMessage(chatId, '‚úÖ *‡πÇ‡∏Ñ‡πâ‡∏î‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏•‡πâ‡∏ß!*', { parse_mode: 'Markdown' });
                    delete userSessions[userId];
                  }, (errorMsg) => {
                    bot.sendMessage(chatId, `üö´ *‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:* ${errorMsg}`, { parse_mode: 'Markdown' });
                    if (session.loadingMessageId) {
                      bot.deleteMessage(chatId, session.loadingMessageId).catch(console.error);
                    }
                    delete userSessions[userId];
                  });
                });
              }
            } else {
              login((loginError) => {
                if (loginError) {
                  bot.sendMessage(chatId, 'üö´ *‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö!*', { parse_mode: 'Markdown' });
                  if (session.loadingMessageId) {
                    bot.deleteMessage(chatId, session.loadingMessageId).catch(console.error);
                  }
                  delete userSessions[userId];
                  return;
                }

                let userData = getUserData(userId.toString());
                let currentCredits = userData.credits || 0;
                let requiredCredits;
                if (session.timeUnit === 'day') {
                  requiredCredits = session.timeAmount * 2;
                } else if (session.timeUnit === 'hour') {
                  requiredCredits = session.timeAmount * 5.4;
                } else if (session.timeUnit === 'minute') {
                  requiredCredits = session.timeAmount * 0.1;
                }
                if (session.ipLimit && session.ipLimit > 0) {
                  requiredCredits += session.ipLimit * 1;
                }
                requiredCredits = parseFloat(requiredCredits.toFixed(2));

                if (currentCredits < requiredCredits) {
                  bot.sendMessage(chatId, `‚ö†Ô∏è *‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÑ‡∏°‡πà‡∏û‡∏≠!* ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ ${currentCredits} ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ${requiredCredits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ï‡∏¥‡∏°‡∏î‡πâ‡∏ß‡∏¢ /topup`, { parse_mode: 'Markdown' });
                  if (session.loadingMessageId) {
                    bot.deleteMessage(chatId, session.loadingMessageId).catch(console.error);
                  }
                  delete userSessions[userId];
                  return;
                }

                addNewClient(session, (clientCode, expiryTime) => {
                  sendCodeToUser(userId, chatId, clientCode, session, msg, expiryTime);
                  if (session.loadingMessageId) {
                    bot.deleteMessage(chatId, session.loadingMessageId).catch(console.error);
                  }
                  bot.sendMessage(chatId, '‚úÖ *‡πÇ‡∏Ñ‡πâ‡∏î‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏•‡πâ‡∏ß!*', { parse_mode: 'Markdown' });
                  delete userSessions[userId];
                }, (errorMsg) => {
                  bot.sendMessage(chatId, `üö´ *‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:* ${errorMsg}`, { parse_mode: 'Markdown' });
                  if (session.loadingMessageId) {
                    bot.deleteMessage(chatId, session.loadingMessageId).catch(console.error);
                  }
                  delete userSessions[userId];
                });
              });
            }
          }, 4000);
        }).catch((error) => {
          console.error('üö´ Error sending loading animation:', error);
          bot.sendMessage(chatId, 'üö´ *‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á*', { parse_mode: 'Markdown' });
          delete userSessions[userId];
        });
      }
    } else if (session.step === 'transfer_ask_user') {
      if (!msg.reply_to_message) {
        bot.sendMessage(chatId, '‚ùå *‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö*', { parse_mode: 'Markdown' });
        delete userSessions[userId];
        return;
      }
      const targetUserId = msg.reply_to_message.from.id;
      if (targetUserId) {
        session.targetUserId = targetUserId;
        session.step = 'transfer_ask_amount';
        const message = `üí∞ *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ID: ${targetUserId}*`;
        bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });
      } else {
        bot.sendMessage(chatId, '‚ùå *‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö*', { parse_mode: 'Markdown' });
        delete userSessions[userId];
      }
    } else if (session.step === 'transfer_ask_amount') {
      const amount = parseInt(text);
      if (isNaN(amount) || amount <= 0) {
        bot.sendMessage(chatId, '‚ö†Ô∏è *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!*', { parse_mode: 'Markdown' });
        return;
      }

      const userIdStr = userId.toString();
      const targetUserIdStr = session.targetUserId.toString();
      let userData = getUserData(userIdStr);
      let targetUserData = getUserData(targetUserIdStr);
      let currentCredits = userData.credits || 0;

      if (currentCredits < amount) {
        bot.sendMessage(chatId, `‚ö†Ô∏è *‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÑ‡∏°‡πà‡∏û‡∏≠!* ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ ${currentCredits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô ${amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï`, { parse_mode: 'Markdown' });
        delete userSessions[userId];
        return;
      }

      userData.credits = currentCredits - amount;
      targetUserData.credits = (targetUserData.credits || 0) + amount;
      saveUserData(userIdStr, userData);
      saveUserData(targetUserIdStr, targetUserData);

      bot.sendMessage(chatId, `‚úÖ *‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!* ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÇ‡∏≠‡∏ô ${amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ID: ${session.targetUserId}\n‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: ${userData.credits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï`, { parse_mode: 'Markdown' });
      bot.sendMessage(session.targetUserId, `üéÅ *‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ${amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ID: ${userId}*\n‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: ${targetUserData.credits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï`, { parse_mode: 'Markdown' }).catch(console.error);
      delete userSessions[userId];
    } else if (session.step === 'givecredits_ask_user') {
      if (!msg.reply_to_message) {
        bot.sendMessage(chatId, '‚ùå *‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö*', { parse_mode: 'Markdown' });
        delete userSessions[userId];
        return;
      }
      const targetUserId = msg.reply_to_message.from.id;
      if (targetUserId) {
        session.targetUserId = targetUserId;
        session.step = 'givecredits_ask_amount';
        const message = `üí∞ *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ID: ${targetUserId}*`;
        bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });
      } else {
        bot.sendMessage(chatId, '‚ùå *‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö*', { parse_mode: 'Markdown' });
        delete userSessions[userId];
      }
    } else if (session.step === 'givecredits_ask_amount') {
      const amount = parseInt(text);
      if (isNaN(amount) || amount <= 0) {
        bot.sendMessage(chatId, '‚ö†Ô∏è *‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!*', { parse_mode: 'Markdown' });
        return;
      }

      const targetUserIdStr = session.targetUserId.toString();
      let targetUserData = getUserData(targetUserIdStr);
      targetUserData.credits = (targetUserData.credits || 0) + amount;
      saveUserData(targetUserIdStr, targetUserData);

      bot.sendMessage(chatId, `‚úÖ *‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!* ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏° ${amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ID: ${session.targetUserId}\n‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: ${targetUserData.credits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï`, { parse_mode: 'Markdown' });
      bot.sendMessage(session.targetUserId, `üéÅ *‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ${amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏à‡∏≤‡∏Å‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô*\n‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: ${targetUserData.credits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï`, { parse_mode: 'Markdown' }).catch(console.error);
      delete userSessions[userId];
    }
  }
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
function sendCodeToUser(userId, chatId, clientCode, session, msg, expiryTime) {
  const userIdStr = userId.toString();
  let userData = getUserData(userIdStr);
  
  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏î‡∏•‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏´‡∏±‡∏Å‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
  if (!session.isTrial) {
    let requiredCredits;
    if (session.timeUnit === 'day') {
      requiredCredits = session.timeAmount * 2;
    } else if (session.timeUnit === 'hour') {
      requiredCredits = session.timeAmount * 5.4;
    } else if (session.timeUnit === 'minute') {
      requiredCredits = session.timeAmount * 0.1;
    }
    if (session.ipLimit && session.ipLimit > 0) {
      requiredCredits += session.ipLimit * 1;
    }
    requiredCredits = parseFloat(requiredCredits.toFixed(2));
    userData.credits = (userData.credits || 0) - requiredCredits;
  }

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  if (!userData.codes) {
    userData.codes = [];
  }
  userData.codes.push({
    codeName: session.codeName,
    code: clientCode,
    creationDate: new Date().toISOString(),
    expiryTime: expiryTime,
    type: session.type,
    ipLimit: session.ipLimit,
    gbLimit: session.gbLimit
  });
  saveUserData(userIdStr, userData);

  // ‡∏™‡πà‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
  if (chatId !== userId) {
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° ‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πá‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏ß‡πâ‡∏™‡πà‡∏á‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
    userSessions[userId] = userSessions[userId] || {};
    userSessions[userId].pendingCode = { clientCode, session, msg, expiryTime };
    bot.sendMessage(userId, `üéâ *‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!*\n\nüìù *‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î:* ${session.codeName}\n\n${clientCode}\n\n‚è∞ *‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏:* ${new Date(expiryTime).toLocaleString('th-TH')}\n\nüì± *‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:*\n1. ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n2. ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏û V2rayNG\n3. ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° + ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "Import config from clipboard"\n4. ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!`, { parse_mode: 'Markdown' }).catch(error => {
      console.error('üö´ Error sending code to user:', error);
      bot.sendMessage(chatId, '‚ö†Ô∏è *‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡∏ö‡∏≠‡∏ó‡∏Å‡πà‡∏≠‡∏ô!*\n\n‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà @' + botUsername + ' ‡πÅ‡∏•‡∏∞‡∏Å‡∏î Start', { parse_mode: 'Markdown' });
    });
  } else {
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏™‡πà‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏•‡∏¢
    bot.sendMessage(chatId, `üéâ *‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!*\n\nüìù *‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î:* ${session.codeName}\n\n${clientCode}\n\n‚è∞ *‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏:* ${new Date(expiryTime).toLocaleString('th-TH')}\n\nüì± *‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:*\n1. ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n2. ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏û V2rayNG\n3. ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° + ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "Import config from clipboard"\n4. ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!`, { parse_mode: 'Markdown' });
  }
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ
setInterval(() => {
  const now = Date.now();
  const groupChatId = -1002415342873;
  
  for (let userId in newUserActivity) {
    const userData = newUserActivity[userId];
    
    // ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏Å‡∏¥‡∏ô 10 ‡∏ô‡∏≤‡∏ó‡∏µ ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    if (!userData.isActive && !userData.warningSent && (now - userData.joinTime > 10 * 60 * 1000)) {
      bot.sendMessage(groupChatId, `‚ö†Ô∏è @${userId} ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏î‡πÜ ‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ô‡∏≥‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°`);
      userData.warningSent = true;
    }
    
    // ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏Å‡∏¥‡∏ô 15 ‡∏ô‡∏≤‡∏ó‡∏µ ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô
    if (!userData.isActive && userData.warningSent && !userData.isBanned && (now - userData.joinTime > 15 * 60 * 1000)) {
      bot.kickChatMember(groupChatId, userId, Math.floor(now / 1000) + 60).then(() => {
        bot.sendMessage(groupChatId, `üö´ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ID: ${userId} ‡∏ñ‡∏π‡∏Å‡∏ô‡∏≥‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏î‡πÜ`);
        userData.isBanned = true;
      }).catch(error => {
        console.error(`üö´ Error kicking user ${userId}:`, error);
      });
    }
    
    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
    if (userData.isBanned && (now - userData.joinTime > 60 * 60 * 1000)) {
      delete newUserActivity[userId];
    }
  }
}, 5 * 60 * 1000); // ‡∏ó‡∏∏‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ
